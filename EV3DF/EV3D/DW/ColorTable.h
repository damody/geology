//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : ColorTable.h
//  @ Date : 2010/3/18
//  @ Author : 
//
//


#if !defined(_COLORTABLE_H)
#define _COLORTABLE_H
#include <map>
#include "Color4.h"

struct ColorTable {
public:
	typedef std::map<float,Color4> ctMap;
	int size;
	ctMap vMapping;
	void push_back(const float num, const Color4 c)
	{
		vMapping.insert(std::make_pair(num, c));
	}
	void clear()
	{
		vMapping.clear();
	}
	inline Color4 GetColor4(float c)
	{
		int i = 0;
		ctMap::iterator it, lit;
		for (it = vMapping.begin();it != vMapping.end();it++)
		{
			if (it->first > c)
			{
				if (i == 0)
					return it->second;
				else
				{
					return lit->second.GetMixColor(it->second, (c - lit->first)/(it->first - lit->first));
				}
			}
			lit = it;
			i++;
		}
		return (--it)->second;
	}
};

#endif  //_COLORTABLE_H
